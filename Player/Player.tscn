[gd_scene load_steps=11 format=2]

[ext_resource path="res://Player/Player.gd" type="Script" id=1]
[ext_resource path="res://Player/player_1.png" type="Texture" id=2]
[ext_resource path="res://Player/player_2.png" type="Texture" id=3]
[ext_resource path="res://Obstacles/key_sprites/key1.png" type="Texture" id=4]
[ext_resource path="res://Obstacles/key_sprites/key2.png" type="Texture" id=5]
[ext_resource path="res://Obstacles/key_sprites/key3.png" type="Texture" id=6]
[ext_resource path="res://Engine/HoldKey.gd" type="Script" id=7]

[sub_resource type="RectangleShape2D" id=1]

custom_solver_bias = 0.0
extents = Vector2( 30, 30 )

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 3 ) ],
"loop": true,
"name": "default",
"speed": 2.0
} ]

[sub_resource type="SpriteFrames" id=3]

animations = [ {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 5 ) ],
"loop": true,
"name": "default",
"speed": 3.0
} ]

[node name="Player" type="Area2D"]

input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"
script = ExtResource( 1 )
_sections_unfolded = [ "Pickable" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="0"]

shape = SubResource( 1 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="." index="1"]

frames = SubResource( 2 )
animation = "default"

[node name="CanvasLayer" type="CanvasLayer" parent="." index="2"]

layer = 1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )
transform = Transform2D( 1, 0, 0, 1, 0, 0 )

[node name="HoldKey" type="AnimatedSprite" parent="CanvasLayer" index="0"]

position = Vector2( 32, 32 )
frames = SubResource( 3 )
animation = "default"
frame = 1
playing = true
script = ExtResource( 7 )
_sections_unfolded = [ "Transform" ]

[connection signal="area_entered" from="." to="." method="_on_Player_area_entered"]

[connection signal="mouse_entered" from="." to="." method="_on_Player_mouse_entered"]

[connection signal="mouse_exited" from="." to="." method="_on_Player_mouse_exited"]


